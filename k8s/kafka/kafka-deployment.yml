apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  namespace: asset-spy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      initContainers:
        - name: volume-permissions
          image: busybox
          command:
            - sh
            - -c
            - |
              mkdir -p /bitnami/kafka/config
              chmod -R 777 /bitnami/kafka
              chown -R 1001:1001 /bitnami/kafka
          securityContext:
            runAsUser: 0
          volumeMounts:
            - mountPath: /bitnami/kafka
              name: kafka-data
      securityContext:
        fsGroup: 1001
      containers:
        - name: kafka
          image: bitnami/kafka:latest
          securityContext:
            runAsUser: 1001
            runAsNonRoot: true
          resources:
            limits:
              memory: "512Mi"
              cpu: "200m"
            requests:
              memory: "256Mi"
              cpu: "100m"
          env:
            - name: KAFKA_CFG_NODE_ID
              value: "0"
            - name: KAFKA_CFG_CONTROLLER_BROKER_ID
              value: "0"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "controller,broker"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka:9093"
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
          ports:
            - containerPort: 9092
            - containerPort: 9093
            - containerPort: 9094
          volumeMounts:
            - mountPath: /bitnami/kafka
              name: kafka-data
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc